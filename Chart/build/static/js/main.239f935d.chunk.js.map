{"version":3,"sources":["Components/GetData.js","Components/Spinner.js","Components/HighChart.js","Components/Piechart.js","Components/App.js","index.js"],"names":["SearchBar","state","username","password","onFormSubmit","event","preventDefault","props","onAppsubmit","console","log","className","style","border","onSubmit","this","htmlFor","id","type","placeholder","value","height","onChange","e","setState","target","required","React","Component","Spinner","message","defaultProps","charts","title","text","HighChart","highcharts","Highcharts","options","chart","xAxis","categories","xdata","labels","format","yAxis","opposite","series","name","data","issue","ydata","Piechart","colorByPoint","App","Issue","X","Y","isload","isclicked","err","Bars","Pie","Piedata","onSearchSubmit","pass","a","toUpperCase","fetch","then","res","json","map","push","y","backgroundColor","marginTop","textAlign","width","GetData","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.239f935d.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass SearchBar extends React.Component {\n\n\n    state = { username: '' ,password : '' };\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        this.props.onAppsubmit(this.state.username,this.state.password);\n        console.log(this.state.password , this.state.username)\n    };\n\n    render() {\n        return (\n            <div className=\"ui segment \" style={{ border: '0px' }}>\n                <form onSubmit={this.onFormSubmit} >\n                    <label htmlFor=\"username\"> Username :  </label>\n                    <input id=\"username\" type=\"text\"\n                        placeholder=\"Username\"\n                        value={this.state.username}\n                        height=\" 20px\" onChange={(e) => this.setState({ username: e.target.value })} required />\n                     <br />\n                     <label htmlFor=\"password\"> Password :  </label>\n                    <input id=\"password\" type=\"password\"\n                        placeholder=\"password\"\n                        value={this.state.password}\n                        required\n                        height=\" 20px\" onChange={(e) => this.setState({ password: e.target.value })} />\n                    <br />\n                    <button> Log in </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst Spinner = (props) => {\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">{props.message} </div>\n        </div>\n    );\n};\n\n// default props if not any message\n\nSpinner.defaultProps = {\n    'message' : 'Loading .... '\n}\n\nexport default Spinner\n","import Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport React from \"react\";\nlet charts = {\n  type: \"column\",\n};\n\nlet title = {\n  text: \"John\",\n};\n\nconst HighChart = (props) => (\n  <div>\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={{\n        title: title,\n        chart: charts,\n        xAxis: {\n          type: \"datetime\",\n          categories: props.xdata,\n          labels: {\n            format: \"{value:%Y-%b-%e %H:%M}\",\n          },\n          title: { text: \"Time1\" },\n        },\n\n        yAxis: [\n          {\n            title: { text: \"No of Issues\" },\n          },\n          {\n            //--- Secondary yAxis\n            title: {\n              text: \"No of Comments\",\n            },\n            opposite: true,\n          },\n        ],\n        series: [\n          {\n            yAxis: 0,\n            name: \"issues\",\n            data: props.issue,\n          },\n          {\n            yAxis: 1,\n            name: \"comments\",\n            data: props.ydata,\n          },\n        ],\n      }}\n    />\n  </div>\n);\n\nexport default HighChart;\n","import Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport React from \"react\";\nlet charts = {\n  type: \"pie\",\n};\n\nlet title = {\n  text: \"Micky\",\n};\n\nconst Piechart = (props) => (\n  <div>\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={{\n        title: title,\n        chart: charts,\n        series: [{\n            name: 'Users',\n            colorByPoint: true,\n            data: props.data\n        }]\n      }}\n    />\n  </div>\n);\n\nexport default Piechart;\n","import React from \"react\";\nimport GetData from \"./GetData\";\nimport Spinner from \"./Spinner\";\nimport HighChart from \"./HighChart\";\nimport Piechart from './Piechart';\n\nclass App extends React.Component {\n  state = {\n    Issue: [],\n    X: [],\n    Y: [],\n    isload: true,\n    isclicked: false,\n    err: false,\n    Bars: false,\n    Pie: false,\n    Piedata : []\n  };\n  //  get data from children backward\n  onSearchSubmit = async (name, pass) => {\n    this.setState({Bars : false  , Pie : false})\n    if (\n      (name.toUpperCase() === \"JOHN\" && pass === \"12345\") ||\n      (name.toUpperCase() === \"MICKY\" && pass === \"98765\")\n    ) {\n      this.setState({ isclicked: true, isload: true });\n      fetch(\"https://api.github.com/repositories/19438/issues\")\n        .then((res) => res.json())\n        .then((res) => {\n          if (name.toUpperCase() === 'JOHN') {\n            let xdata = [];\n            let ydata = [];\n            let issue = [];\n            console.log(typeof res);\n            res.map((e) => {\n              xdata.push(e[\"created_at\"]);\n              ydata.push(e[\"comments\"]);\n              issue.push(e[\"number\"]);\n            });\n            this.setState({\n              X: xdata,\n              Y: ydata,\n              Issue: issue,\n              isload: false,\n              isclicked: false,\n              err: false,\n              Bars: true,\n            }\n\n            );\n          }\n\n          else {\n            let Piedata = [];\n            res.map((e, id) => {\n              Piedata.push({\n                name: `User ${id}`,\n                y: e['number']\n              });\n\n            });\n\n            this.setState({\n              Piedata : Piedata,\n              isload: false,\n              isclicked: false,\n              err: false,\n              Pie : true,\n            }\n\n            );\n          }\n\n\n        });\n    } else {\n      this.setState({ err: true });\n    }\n  };\n\n  render() {\n    if (this.state.isclicked && this.state.isload) {\n      return <Spinner style={{ backgroundColor: \"#302F4D\" }} />;\n    } else\n      return (\n        <div\n          className=\"ui container\"\n          style={{\n            marginTop: \"50px\",\n            border: \"none\",\n            textAlign: \"center\",\n            width: \"500px\",\n          }}\n        >\n          <h1>Dashboard</h1>\n          {/* function call to get data from children */}\n          <h1>\n            <GetData onAppsubmit={this.onSearchSubmit} />\n          </h1>\n          {this.state.err && <p>error</p>}\n          {this.state.Bars && (\n            <HighChart\n              xdata={this.state.X}\n              ydata={this.state.Y}\n              issue={this.state.Issue}\n            />\n          )}\n\n          {this.state.Pie && <Piechart data = {this.state.Piedata} />}\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// Import React and React-Dom\n\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./Components/App\";\n\n\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}